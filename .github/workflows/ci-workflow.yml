name: CI

on: [push]

jobs:
  test:
    strategy:
      matrix:
        node: [11]
    name: Test Node v${{ matrix.node }}
    runs-on: ubuntu-latest
    services: 
      mysql:
        image: mysql:5
        ports:
          - '3306:3306'
        environment:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: test
      postgres:
        image: postgres:11
        ports:
          - '5432:5432'
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          version: ${{ matrix.node }}    
      - name: Install npm packages
        run: npm ci
      - name: Bootstrap monorepo packages
        run: |
          npm run bootstrap
          npm run build
      - name: Setup cc-test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Test monorepo packages
        run: | 
          npm test
          npx ts-node scripts/merge-coverage.ts
      - name: Report coverage
        run: ./cc-test-reporter after-build -r ${{ secrets.CC_TEST_REPORTER_ID }} --coverage-input-type lcov


      # - run: npm ci
      # - run: npm run bootstrap
      # - run: npm run build

      # - save_cache:
      #     paths:
      #       - node_modules
      #       - packages/history/node_modules
      #       - packages/transformers/node_modules
      #     key: v1-dependencies-{{ checksum "package-lock.json" }}-{{ checksum "packages/history/package-lock.json" }}-{{ checksum "packages/transformers/package-lock.json" }}

      # # Setup cc-test-reporter
      # - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      # - run: chmod +x ./cc-test-reporter
      # - run: export GIT_COMMIT_SHA=$CIRCLE_SHA1
      # - run: export GIT_BRANCH=$CIRCLE_BRANCH
      
      # - run: ./cc-test-reporter before-build
      # - run: npm run test:e2e -- --scope=@anchan828/typeorm-history
      # - run: npm run test:e2e -- --scope=@anchan828/typeorm-transformers
      # - run: npm run test:e2e -- --scope=@anchan828/typeorm-decorators
      # - run: npm run test
      # - run: npx ts-node scripts/merge-coverage.ts
      # - run: ./cc-test-reporter after-build --coverage-input-type lcov